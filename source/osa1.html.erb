---
  title: Osa 1
  exercise_page: false
  quiz_page: false
  published: true
---


<% partial 'partials/hint', locals: { name: 'Osan 1 etapit' } do %>

  <ul>
    <li>
      Olet valinnut harjoitustyöllesi aiheen.
    </li>
    <li>
      Olet luonut harjoitustyölle github-repositoryn, jossa on lyhyt kuvaus harjoitustyön aiheesta.
    </li>
	  <li>
	    Olet tehnyt hahmotelman tietokantakaaviosta.
	  </li>
    <li>
	    Kirjoita dokumentaatio Markdown-muodossa. Voit katsoa vihjeitä muotoiluun esimerkiksi <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet" target="_blank" norel>täältä.</a>
	</li>
  </ul>
  
<% end %>


<% partial 'partials/material_heading' do %>
  Aiheen valinta
<% end %>

<% partial 'partials/material_sub_heading' do %>
  Työ omasta aiheesta
<% end %>

<p>
  Mikäli haluat tehdä työn omasta aiheesta ja työ täyttää harjoitustyön vaatimukset (tietokanta jossa noin 3-5 taulua, monen suhde moneen, yhteenvetokyselyitä, jne), voit toteuttaa työn omalla aiheellasi. Aiheesta täytyy laatia aihekuvaus, joka tulee tallettaa github-repositorioosi ensimmäisen osan palautuksen yhteydessä. Voit myös toteuttaa valmiista aihe-ehdotuksesta oman variaatiosi.
</p>

<p>
  Hyviä aiheideoita voit saada vaikkapa omista harrasteista ja kiinnostuksen kohteista. Kurssilla on vuosien saatossa toteutettu mm. kaikennäköisiä roolipelitietokantoja, lintutietokanta, bussinbongaustietokanta ja haalarimerkkigalleria.
</p>

<p>
  Aiheesta on hyvä keskustella ohjaajan kanssa. Täten varmistetaan aiheen sopiva laajuus, työ ei saa olla liian suppea, mutta se ei myöskään saa olla liian laaja. Tavoite olisi, että jokaisella olisi aihe olemassa jo aloitusluennon jälkeen.
</p>


<% partial 'partials/material_sub_heading' do %>
   Valmiita aiheaihioita
<% end %>

<p>
  Alla on esimerkin vuoksi mahdollisia työaiheita.
</p>


<% partial 'partials/material_sub_sub_heading' do %>
  Esimerkkiaiheita ja kuvauksen hahmottelua
<% end %>

<strong>Kurssitarjonta ja kurssipaikan varaus</strong>

<p>
  Kurssikeskus Opinahjo järjestää maksullisia kursseja eri aihepiireistä. Yhteen aihepiiriin liittyen pidetään vuodessa 1-20 kurssia. Sama kurssin voidaan vuoden aikana järjestää useaan kertaan. Kursseille voi osallistua keskimäärin 20 opiskelijaa, mutta isoja yli sadankin hengen kursseja on joskus ohjelmassa. Kustakin kurssista on laadittu esite, josta käyvät selville kurssin aika, kurssipaikka kurssin opettajat ja kurssin sisältö.
</p>

<p>
  Kuka tahansa voi tutkia kurssitietoja ja ilmoittautua kurssille. Jotta ilmoittautuminen tulisi voimaan, on varaajan maksettava varausmaksu. Tätä varten varaajalle ilmoitetaan tilinumero ja varaukseen liittyvä viitenumero ja varausmaksun määrä. Jos varaaja erikseen pyytää laskua varausmaksusta, sellainen lähetetään. Varsinainen kurssimaksun laskutus ei kuulu tämän järjestelmän piiriin.
</p>

<p>
  Toimintoja:
</p>

<ul>
  <li>Kirjautuminen</li>
  <li>Kurssin syöttö ja muokkaus</li>
  <li>Kurssitarjonnan katselu ja varauksen teko</li>
  <li>Varauslaskujen kirjoitus - niille jotka ovat sitä pyytäneet tai eivät ole viikon kuluessa vauksesta maksaneet varausmaksua. (valinnainen)</li>
  <li>Ilmoittautuneiden luettelo</li>
  <li>Varauksen peruutus yrityksen toimesta, jos maksua ei ole maksettu</li>
  <li>Varauksen peruutus asiakkaan toimesta</li>
  <li>Kurssin peruutus</li>
</ul>




<strong>Projektin työaikaseuranta</strong>

<p>
  Tehtävänä on laatia järjestelmä, jolla voidaan seurata projektiin käytettyä työaikaa. Järjestelmää on tarkoitus käyttää ohjelmistotuotantoprojekteissa sekä harjoitustöissä. Projektipäällikkö tai ohjaaja saa järjestelmältä yhteenvetoja käytetystä työajasta viikottain, henkilöittäin ja tehtävälajeittain. Kukin projektiin osallistuva henkilö kirjaa järjestelmän tekemänsä työtunnit, työlajin ja mahdollisen selityksen. Projektin osallistuja saa nähtäväkseen tekemänsä kirjaukset. Hän saa esiin myös itseensä liittyvät yhteenvetoraportit. Projektipäällikkö saa halutessaan käyttöönsä myös tiedot kunkin työntekijään yksityiskohtaisista kirjauksista.
</p>

<p>
  Toimintoja:
</p>

<ul>
  <li>Kirjautuminen</li>
  <li>Työaikakirjauksen teko</li>
  <li>Projektin perustaminen</li>
  <li>Henkilön liittäminen projektiin</li>
  <li>Henkilön poistaminen projektista</li>
  <li>Projektipäällikön raportit</li>
  <li>Yksityiskohtainen työraportti</li>
</ul>


<strong>Keskustelufoorumi</strong>

<p>
  Harjoitustyössä tehdään keskustelufoorumi jonkin yhteisön, vaikkapa opiskelijajärjestön sisäiseen käyttöön. Käyttäjä voi lukea järjestelmän tallennettuja kirjoituksia ja lisätä tietokantaan uusia kirjoituksia, jotka voivat olla myös vastineita aiempiin kirjoituksiin. Kirjoituksia voi hakea kirjoittajan nimen tai aiheen tai artikkelin iän perusteella. Lukija voi seurata myös vastinepolkua. Oletusarvoisesti lukijalle näytetään kaikki tietty ikää tuoreemmat artikkelit varustettuna informaatiolla siitä onko lukija itse ja ovatko kaikki yhteisön jäsenet jo lukeneet artikkelin. Lukija identifioi aina itsensä ja artikkeleihin liitetään tieto henkilöistä jotka ovat lukeneet ne. Tämä tieto on kaikkien lukijoiden saatavissa.
</p>

<p>
  Järjestelmän ylläpitäjällä on oma liittymä, jonka kautta hän ylläpitää järjestön käyttäjien jäsentietoja ja heidän kuulumistan eri ryhmiin, siivota kirjoituskantaa ja määrittellä aiheita, joiden perusteella kirjoituksia voi ryhmitellä.
</p>

<p>
  Toimintoja:
</p>

<ul>  
  <li>Kirjautuminen</li>
  <li>Kirjoituksen lisääminen</li>
  <li>Kirjoitusten näyttäminen eri kriteerein</li>
  <li>Ryhmän jäsenen lisääminen, muokkaaminen ja poistaminen</li>
  <li>Vastineen laatiminen ja muokkaus</li>
  <li>Kirjoitusten poistaminen</li>
  <li>Aiheiden määrittely, muokkaus ja poisto</li>
</ul>


<strong>Lääkäriaseman työvuorolista</strong>


<p>
  Tehtävänä on laatia järjestelmä, jolla voidaan laatia lääkäriaseman työvuorolistoja. Lääkäriaseman henkilöstö jaetaan kolmeen luokkaan: lääkärit, sairaanhoitajat ja perushoitajat. Myös aseman aukioloajat jaetaan tarvittavan henkilöstövahvuuden mukaan eri kiireellisyysluokkiin. Jokaiselle kiireellisyysluokalle määritellään minimivahvuus eli kuinka monta kunkin henkilöstöluokan työntekijää täytyy olla töissä. Kuitenkin laskettessa minimivahvuutta ylempi voi korvata alemman eli lääkäri voi olla sairaanhoitaja tai perushoitaja, ja sairaanhoitaja voi olla myös perushoitaja. Jokainen aseman aukiolotunti kuuluu johonkin kiireellisyysluokkaan.
</p>

<p>
  Huom. järjestelmä saa hyväksyä vain sellaiset työvuorolistat, jotka täyttävät vaaditut henkilöstövahvuudet. Lisäksi jokaisella työntekijällä on määritelty päivä- tai viikkotuntimäärä, jonka ylitykset järjestelmään täytyy estää.
</p>

<p>
  Toimintoja:
</p>

<ul>
  <li>Kirjautuminen</li>
  <li>Kiireellisyysluokkien teko (ja muutos)</li>
  <li>Henkilöstövahvuuskalenterin teko (ja muutos)</li>
  <li>Työvuorolistan teko (ja muutos)</li>
  <li>Henkilökohtaisen työvuorolistan listaus</li>
  <li>Työvuorolistan listaus</li>
  <li>Työntekijäkohtainen työraportti (tehdäyt tunnit tietyllä aikavälillä)</li>
  <li>Työntekijään tekemien tuntien listaus kiireellisyysluokittain</li>
  <li>Työvuorolistan ylimiehityksen raportointi</li>
</ul>


<% partial 'partials/material_sub_heading' do %>
  Lisää aiheita
<% end %>

<ul>  <li>Elektroninen keittokirja</li>
  <li>Graduaiheet</li>
  <li>Henkilögalleria</li>
  <li>Hiihtokisojen tulospalvelu</li>
  <li>Huutokauppa</li>
  <li>Kennelkerho</li>
  <li>Keskustelufoorumi</li>
  <li>Kurssikysely</li>
  <li>Kurssin kotisivu</li>
  <li>Kurssitarjonta ja kurssipaikan varaus</li>
  <li>Lääkäriaseman työvuorolista</li>
  <li>Lääkärin kotikäynnit</li>
  <li>Matkojen markkinointi</li>
  <li>Muistilista</li>
  <li>Ostoskassi</li>
  <li>Palvelubisnes</li>
  <li>Parturi-Kampaamo</li>
  <li>Pizzapalvelu</li>
  <li>Pokémon-tietokanta</li>
  <li>Projektin työaikaseuranta</li>
  <li>Rankkauslista</li>
  <li>Taloyhtiön palvelut</li>
  <li>Tavaranvaihto</li>
  <li>Tukkuliikkeen tilaustenkäsittely</li>
  <li>Tutkimusaineiston keräys</li>
  <li>Työaihekanta</li>
  <li>Usein kysytyt kysymykset</li>
  <li>Vedonlyönti</li>
  <li>Vuokra-asuntojen välitys</li>
  <li>Ystävänvälityspalvelu</li>
  <li>Äänestys</li>
</ul>

<% partial 'partials/material_heading' do %>
  Tietokantakaavio
<% end %>

<p>
  Tee työllesi alustava tietokantakaavio. Kaavion on tarkoitus kuvata suunnitelmaa mihin työtäsi kurssin aikana viet. Näin myös sinun on helppo seurata kurssin edetessä omaa suunnitelmaasi ja tarvittaessa päivittää sitä.
</p>

<p>
  Tietokantakaavion tekemistä voi kerrata esimerkiksi vanhan <a href="https://tietokantojen-perusteet-19.mooc.fi/osa-3/3-kasiteanalyysista-tietokantakaavioksi" target="_blank">Tietokantojen perusteet</a> -kurssin materiaalista.
</p>

<% partial 'partials/material_heading' do %>
  Luo aiheelle github-repositorio ja kuvaus
<% end %>

<p>
  Luo github-tunnuksesi alle uusi repositorio. Aseta repositorion nimeksi aiheesi nimi. Luo tämän jälkeen repositorion juureen tiedosto <code>README.md</code>, johon kirjoitat aihekuvauksen. Kuvauksen ei tarvitse olla tässä vaiheessa pitkä, muutama lause riittää. Lisää repositorioon luomasi tietokantakaavio kuvana (svg, png, jpg) ja lisää myös luomaasi README-tiedostoon linkki tietokantakaavioosi.
</p>

<% partial 'partials/material_sub_heading' do %>
  Siirrä sovellus Githubiin
<% end %>

<p>
  Luodaan projektikansiolle git-versionhallinta komennolla <code>git init</code>. Tämä luo mahdollisuuden projektin versiointiin ja luo kansioon <code>.git</code>-nimisen kansion.
</p>

<p>
  Lisätään githubissa oleva repositorio kansion paikallisen versionhallinnan etäpisteeksi. Projektin osoite löytyy githubista (se on tyypillisesti muotoa <code>https://github.com/käyttäjätunnus/projektin-nimi.git</code>. Esimerkeissä oletetaan sovelluksen olevan kansiossa <code>demo</code>, josta ajamme myös komennot. Vastaavaa esimerkkiä käytetään jatkossakin kurssin aikana.
</p>

<% partial 'partials/terminal' do %>
  ~/demo$ git remote add origin <em>github-projektin osoite</em>
  ~/demo$ 
<% end %>

<p>
  Lisätään tiedostot githubiin.
</p>


<% partial 'partials/terminal' do %>
  ~/demo$ git add .
  ~/demo$ git push -u origin master
  ..-
  ~/demo$ 
<% end %>

<p>
  Nyt projektin lähdekoodit löytyvät githubista.
</p>

<% partial 'partials/material_heading' do %>
  Palauta työ labtooliin
<% end %>

<p>
  Kun olet luonut aihekuvauksen, tehnyt repositorion ja lisännyt repositorioon aihekuvauksen, lisää lopulta aiheesi <a href="https://study.cs.helsinki.fi/labtool/" target="_blank" norel>labtooliin</a>. Olet nyt sitoutunut suorittamaan harjoitustyön tässä periodissa.
</p>

<p>
  Voit mennä Labtooliin yllä olevasta linkistä, etsiä oikean kurssin ja rekisteröityä sille. Kurssin suora rekisteröitymisosoite Labtooliin ilmoitetaan normaalisti kurssin courses-sivulla, joten rekisteröityminen kyseisen sivun kautta voi säästää hieman vaivaa.
</p>

<p>
  Jatkossa viikoittaiset palautukset tehdään palauttamalla ajan tasalla oleva koodi Githubiin ja päivittämällä sovellus Herokussa. Labtoolista voit lukea palautuksista saamasi pisteet ja ohjaajien kommentit.
</p>
